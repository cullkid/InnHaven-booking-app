// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Hotel{
  id                   String @id @default(uuid())
  userid               String
  title                String @db.Text
  description          String @db.Text
  image                String
  country              String
  state                String
  city                 String
  locationDescription  String
  gym                  Boolean @default(false)
  spa                  Boolean @default(false)
  bar                  Boolean @default(false)
  laundry              Boolean @default(false)
  restaurant           Boolean @default(false)
  shopping             Boolean @default(false)
  freeParking          Boolean @default(false)
  bikeRental           Boolean @default(false)
  freeWifi             Boolean @default(false)
  movieNight           Boolean @default(false)
  swimmingPool         Boolean @default(false)
  coffeeShop           Boolean @default(false)
  addedAt              DateTime @default(now())
  updatedAt            DateTime @default(now())
  rooms                Room[]
  bookings             Booking[]
}

model Room{
  id               String @id @default(uuid())
  title            String
  description      String @db.Text
  bedCount         Int @default(0)
  guestCount       Int @default(0)
  bathroomCount    Int @default(0)
  KingBed          Int @default(0)
  queenBed         Int @default(0)
  image            String
  breaskFastPrice  Int
  roomPrice        Int
  roomService      Boolean @default(false)
  TV               Boolean @default(false)
  balcony          Boolean @default(false)
  freeWifi         Boolean @default(false)
  cityView         Boolean @default(false)
  oceanView        Boolean @default(false)
  forestView       Boolean @default(false)
  mountainView     Boolean @default(false)
  airCondition     Boolean @default(false)
  soundProofed     Boolean @default(false)

  Hotel            Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  hotelId          String?

  Booking          Booking[]

  @@index([hotelId])
}

model Booking{
id                  String @id @default(uuid())
userName            String
userEmail           String
userId              String
roomId              String
hotelId             String
hotelOwnerId        String
startDate           String
endDate             String
breakFastIncluded   String
currency            String
totalPrice          String
paymentStatus       String
paymentIntentId     String
bookedAt            String

Hotel               Hotel? @relation(fields: [hotelId], references: [id])
Room                Room? @relation(fields: [roomId], references: [id])

  @@index([hotelId])
  @@index([roomId])
}

